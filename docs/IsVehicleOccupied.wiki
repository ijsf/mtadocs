{{Useful Function}}
<lowercasetitle></lowercasetitle>

This function checks if a [[/vehicle.md|vehicle]] is being occupied by a [[/ped.md|ped]] or [[/player.md|player]].

==Syntax==
<syntaxhighlight lang="lua">bool, ped/player isVehicleOccupied( element vehicle )</syntaxhighlight>

===Required Arguments===
* '''vehicle''': The [[/vehicle.md|vehicle]] you want to check if it's occupied or not.

===Returns===
Returns ''true'' and the first occupant found if the vehicle is being occupied, ''false'' if it's empty or invalid.

==Code==
<section name="Function source" class="both" show="true">
<syntaxhighlight lang="lua">
function isVehicleOccupied(vehicle)
    assert(isElement(vehicle) and getElementType(vehicle) == "vehicle", "Bad argument @ isVehicleOccupied [expected vehicle, got " .. tostring(vehicle) .. "]")
    local _, occupant = next(getVehicleOccupants(vehicle))
    return occupant and true, occupant
end
</syntaxhighlight>
</section>

==Example==
<section name="Server" class="server" show="true">
This example creates an Infernus at the center of the map and adds a /respawninfernus command to respawn it if it's empty.
<code>
local infernus = createVehicle(411, 0, 0, 20)
setVehicleRespawnPosition(infernus, 0, 0, 20)

function respawnCar(player)
    if not isVehicleOccupied(infernus) then
        respawnVehicle(infernus)
        outputChatBox("The Infernus has been respawned.", player, 0, 255, 0)
    else
        local _, ped = isVehicleOccupied(infernus)
        local ped = getElementType(ped) == "player" and ped or nil
        outputChatBox(((not ped) and "Someone" or getPlayerName(ped)) .. " is using the Infernus.", player, 255, 0, 0)
    end
end
addCommandHandler("respawninfernus", respawnCar)
</syntaxhighlight>
</section>

==See Also==
{{Useful_Functions}}