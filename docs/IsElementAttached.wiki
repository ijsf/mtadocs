{{Server client function}}

<!-- Describe in plain english what this function does. Don't go into details, just give an overview -->
This functions checks whether or not an element is attached to another element.

==Syntax== 
<!-- NOTE: don't use 'special' names for variable names, e.g. you shouldn't be writing things like 'player player, vehicle vehicle', instead write something like 'player thePlayer, vehicle vehicleToGetInto'. This is less confusing and prevents the syntax highlighting being odd -->
<syntaxhighlight lang="lua">
bool isElementAttached ( element theElement )
</syntaxhighlight> 
{{OOP||[[/element.md|element]]:isAttached|attached|}}

===Required Arguments=== 
<!-- List each argument one per line. This should be the argument's name as in the argument list above, NOT the argument's data type -->
*'''theElement:''' The element to check for attachment.

===Returns===
<!-- Make this descriptive. Explain what cases will return false. If you're unsure, add a tag to it so we can check -->
Returns ''true'' if the specified element is attached to another element, ''false'' if it is not attached or if an improper argument is passed.

==Example== 
<!-- Explain what the example is in a single sentance -->
This examples checks if a player is attached to anything when they enter a console command:
<!-- Add the code below, an emphasis should be on making it clear, not optimized. You could provide two versions if you wish, one clear and well commented, the other optimized -->
<syntaxhighlight lang="lua">
-- add a command handler for 'amiattached' to call the function 'consoleIsPlayerAttached':
function consoleIsPlayerAttached ( thePlayer, command )
   if ( thePlayer ) then -- if a player triggered this command
      local status = isElementAttached ( thePlayer ) -- call the function and store it's result in the 'status' variable
      if ( status ) then -- if the function returned true, tell the player he is attached to something
         outputConsole ( "You are attached to an element!", thePlayer )
      else -- if the function returned false, tell the player he is not attached to anything
         outputConsole ( "You are not attached to an element.", thePlayer )
      end
   end
end
addCommandHandler ( "amiattached", consoleIsPlayerAttached )
</syntaxhighlight>

==See Also==
{{Element_functions}}