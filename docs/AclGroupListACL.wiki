 
{{Server function}}<!-- Change this to "Client function" or "Server function" appropriately-->
<!-- Describe in plain english what this function does. Don't go into details, just give an overview -->
This function returns a table over all the ACL's that exist in a given ACL group.

==Syntax== 
<!-- NOTE: don't use 'special' names for variable names, e.g. you shouldn't be writing things like 'player player, vehicle vehicle', instead write something like 'player thePlayer, vehicle vehicleToGetInto'. This is less confusing and prevents the syntax highlighting being odd -->
<syntaxhighlight lang="lua">
table aclGroupListACL ( aclgroup theGroup )
</syntaxhighlight> 
{{OOP||[[/aclgroup.md|aclgroup]]:listACL|aclList|}}
===Required Arguments=== 
<!-- List each argument one per line. This should be the argument's name as in the argument list above, NOT the argument's data type -->
*'''theGroup:''' The ACL group to get the ACL elements from

===Returns===
<!-- Make this descriptive. Explain what cases will return false. If you're unsure, add a tag to it so we can check -->
Returns a table of the ACL elements in the given ACL group. This table might be empty. Returns ''false'' or ''nil'' if theGroup is invalid or it fails for some other reason.

==Example== 
This example outputs the list of ACL's if the aclGroup name is given. (TESTED!)
<syntaxhighlight lang="lua">addCommandHandler("aclList",function(player,command,aclGroup)
	if(aclGroup~="")then
		tables = aclGroupListACL(aclGetGroup(aclGroup))
		count = 0
		for list,nam in pairs(tables) do
			outputChatBox("ACL LIST: "..aclGroup.."Line: "..tostring(count).." ACL: "..aclGetName(nam)..".",player)
			count = count + 1
		end
	else
		outputChatBox("Please add the aclGroup you want the list of.",player)
		outputChatBox("Syntax: /aclList aclGroup",player)
	end
end)
</syntaxhighlight>

==See Also==
<!-- Change FunctionArea to the area that this function is in on the main function list page, e.g. Server, Player, Vehicle etc -->
{{ACL_functions}}