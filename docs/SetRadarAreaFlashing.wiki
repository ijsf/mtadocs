
{{Server client function}}
This function makes an existing radar area flash in transparency.

==Syntax== 
<syntaxhighlight lang="lua">
bool setRadarAreaFlashing ( radararea theRadarArea, bool flash )
</syntaxhighlight> 
{{OOP||[[/radararea.md|radararea]]:setFlashing|flashing|isRadarAreaFlashing}}

===Required Arguments=== 
*'''theRadarArea:''' the [[/radararea.md|radararea]] element we want to change flashing state of.
*'''flash:''' a bool indicating whether the radar area should flash (''true'' to flash, ''false'' to not flash).

===Returns===
Returns ''true'' if the new flash state was successfully set, ''false'' if the radar area doesn't exist or invalid arguments were passed.

==Example== 
'''Example 1:''' This example checks to see whether an existing radar area (''someArea'') is flashing, and forces it to flash if it isn't:
<syntaxhighlight lang="lua">
local isFlashing = isRadarAreaFlashing ( someArea )
if isFlashing then                                           -- if the area is already flashing...
    outputChatBox ( "The radar area is already flashing." )
else                                                         -- if it isn't...
    setRadarAreaFlashing ( someArea, true )                  -- make the area flash
end
</syntaxhighlight>

'''Example 2:''' This example creates a radar area for the ''King of the Hill'' script, and a colsquare. When the player enters the radar area flashes, it stops flashing when a player leaves.
<syntaxhighlight lang="lua">
-- create our hill area for our gamemode
local hillArea = createColSquare ( -2171.0678710938, 678.17950439453, 0, 15, 15 )
local hillRadar = createRadarArea ( -2183.5678710938, 705.67950439453, 40, -40, 0, 255, 0, 175 )

-- add hill_Enter as a handler for when a player enters the hill area
function hill_Enter ( thePlayer, matchingDimension )
    -- announce to everyone that the player entered the hill
    outputChatBox( getPlayerName(thePlayer) .. " entered the zone!", getRootElement(), 255, 255, 109 )
    setRadarAreaFlashing ( hillRadar, true )
end
addEventHandler ( "onColShapeHit", hillArea, hill_Enter )

-- add hill_Enter as a handler for when a player leaves the hill area
function hill_Exit ( thePlayer, matchingDimension )
    -- check if the player is not dead
    if isPlayerDead ( thePlayer ) ~= true then
        -- if he was alive, announce to everyone that the player has left the hill
        outputChatBox ( getPlayerName(thePlayer) .. " left the zone!", getRootElement(), 255, 255, 109 )
        setRadarAreaFlashing ( hillRadar, false )
    end
end
addEventHandler ( "onColShapeLeave", hillArea, hill_Exit )
</syntaxhighlight>

==See Also==
{{Radar area_functions}}