<!--{{Needs_Checking|"Some weapon types do not work."... needs investigating. Shotguns do not work because the pellet code was complex and its actually 8 very clustered pellets. All other bullet weapons should work and be synced. Exact weapons this works with needs documenting still.}}-->
{{Client function}}
Creates a [[/Element/Weapon.md|custom weapon]] that can fire bullets. '''Do not confuse this with player held weapons'''.
{{Tip|Some weapons (such as the minigun) visually point to a slightly different direction to where they fire. To adjust this, use [[/setWeaponProperty.md|setWeaponProperty]] with 'fire_rotation'. See the example below.}}

==Syntax==
<syntaxhighlight lang="lua">weapon createWeapon ( string theType, float x, float y, float z )</syntaxhighlight>
{{OOP||[[/Element/Weapon.md|Weapon]]}}

===Required Arguments===
* '''theType:''' The weapon type which can be:
{{Custom Weapon Types}}

* '''x:''' The x position to create the weapon.
* '''y:''' The y position to create the weapon.
* '''z:''' The z position to create the weapon.

===Returns===
Returns a [[/Element/Weapon.md|custom weapon]] element, which represents a weapon floating at that position.

==Requirements==
{{Requirements|n/a|1.3.0-9.04555|}}

==Example==
This example adds a ''/createminigun'' command to create a weapon that is always firing.
<syntaxhighlight lang="lua">
function createMinigunWeapon()
    -- Create the weapon 1 meter above the player
    local x, y, z = getElementPosition(getLocalPlayer())
    local weapon = createWeapon("minigun", x, y, z + 1)
    -- Give it some ammo and fire it
    setWeaponClipAmmo(weapon, 99999)
    setWeaponState(weapon, "firing")

    -- Optionally adjust for model rotation (this value will be different for other weapons)
    setWeaponProperty(weapon, "fire_rotation", 0, -30, 0)
end
addCommandHandler("createminigun", createMinigunWeapon)
</syntaxhighlight>

==See also==
{{Client weapon creation functions}}
[[/ru:createWeapon.md|ru:createWeapon]]