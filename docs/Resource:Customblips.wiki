{{Resource page}}

The '''customblips''' resource allows you to create Blip icons clientside that appear on radar and on the F11 map.  Custom blips can be any image or GUI element.

==Exported Client functions==
* '''createCustomBlip'''
** This function creates a custom blip using DirectX image functions.  If the stream radius is lower than 180, then the blip will only appear when it is visible on the radar.
<syntaxhighlight lang="lua">
customblip exports.customblips:createCustomBlip ( float worldX, float worldY, int imageWidth, int imageHeight, string imagePath, [float streamRadius = 500] )
</syntaxhighlight>


* '''guiConvertToCustomBlip'''
** This function creates a custom blip using any GUI element.  If the stream radius is lower than 180, then the blip will only appear when it is visible on the radar.
<syntaxhighlight lang="lua">
gui-elem exports.customblips:guiConvertToCustomBlip ( gui-element blipGUI, float worldX, float worldY, [float streamRadius = 500] )
</syntaxhighlight>


* '''getCustomBlipStreamRadius'''
** This function gets the current stream radius of a customblip.  Note, stream radius does not affect the F11 map.
<syntaxhighlight lang="lua">
float exports.customblips:getCustomBlipStreamRadius ( customblip theBlip )
</syntaxhighlight>


* '''setCustomBlipStreamRadius'''
** This function sets the current stream radius of a customblip.  Note, stream radius does not affect the F11 map.
<syntaxhighlight lang="lua">
bool exports.customblips:setCustomBlipStreamRadius ( customblip theBlip, float streamRadius )
</syntaxhighlight>


* '''getCustomBlipPosition'''
** This function gets the world position of a customblip.
<syntaxhighlight lang="lua">
float worldX, float worldY exports.customblips:getCustomBlipPosition ( customblip theBlip )
</syntaxhighlight>
	

* '''setCustomBlipPosition'''
** This function sets the world position of a customblip.
<syntaxhighlight lang="lua">
bool exports.customblips:setCustomBlipPosition ( customblip theBlip, float worldX, float worldY )
</syntaxhighlight>


* '''setCustomBlipRadarScale'''
** This function sets the scale (where 0 is invisible, and 1 is 100% size. Going beyond 1 will increase the size) of the blip when it appears on the radar, relative to the size specified during creation.  Passing nil will default to GTA's radar blip size.
<syntaxhighlight lang="lua">
bool exports.customblips:setCustomBlipRadarScale ( customblip theBlip, float scale )
</syntaxhighlight>


* '''setCustomBlipAlpha'''
** This function sets the alpha (values 0-1) of the blip, allowing the adjustment of transparency.
<syntaxhighlight lang="lua">
bool exports.customblips:setCustomBlipAlpha ( customblip theBlip, float alpha )
</syntaxhighlight>


* '''setCustomBlipVisible'''
** This function sets the visibility of the blip.  Invisible blips will not be drawn.
<syntaxhighlight lang="lua">
bool exports.customblips:setCustomBlipAlpha ( customblip theBlip, bool visible )
</syntaxhighlight>


* '''destroyCustomBlip'''
** This function destroys a custom blip.
<syntaxhighlight lang="lua">
bool exports.customblips:destroyCustomBlip ( customblip theBlip )
</syntaxhighlight>

==Examples==
'''Example 1'''
This example creates a blip that says 'Spawn' at Toreno's house, using GUI
<syntaxhighlight lang="lua">
addEventHandler ( "onClientResourceStart", getResourceRootElement(getThisResource()),
	function()
		local blip = guiCreateButton ( 0, 0, 25, 20, "Spawn", false )
		guiSetFont(blip,"default-small")
		exports.customblips:guiConvertToCustomBlip ( blip, -700, 960, 10 )
	end
)
</syntaxhighlight>


'''Example 2'''
This example creates an image blip of "icon.png" at 0,0 - assuming the size of the image is 20x20px.
<syntaxhighlight lang="lua">
addEventHandler ( "onClientResourceStart", getResourceRootElement(getThisResource()),
	function()
		exports.customblips:createCustomBlip ( 0,0, 20, 20, "icon.png" )
	end
)
</syntaxhighlight>

[[/ru:Resource:Customblips.md|ru:Resource:Customblips]]