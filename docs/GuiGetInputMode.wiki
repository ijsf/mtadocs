{{Client function}}

This function returns the current input mode as set by [[/guiSetInputMode.md|guiSetInputMode]].
Default mode is ''"allow_binds"''.

==Syntax== 
<syntaxhighlight lang="lua">
string guiGetInputMode ( )
</syntaxhighlight>

===Returns===
Returns a string defining the current input mode, potential values are:
* '''"allow_binds":''' binds are enabled, hence using a key such as t in an editbox will still activate the chatbox
* '''"no_binds":''' binds are disabled, hence using a key such as t in an editbox will not activate the chatbox
* '''"no_binds_when_editing":''' binds are always enabled except when an editable editbox or memo has input focus

==Example== 
<section name="Client" class="client" show="true">
<syntaxhighlight lang="lua">
addCommandHandler( "checkmode", 
function ()
    outputChatBox( string.format( "The current input mode is: '%s'", guiGetInputMode () ) )
end )
</syntaxhighlight>
</section>

==Note==
This function, introduced in 1.1, is '''not''' a replacement of [[/guiGetInputEnabled.md|guiGetInputEnabled]], indeed for the mode ''"no_binds_when_editing"'' the actual state of binds depends on the currently focused GUI widget. However:
* when ''guiGetInputMode ( )'' returns ''"allow_binds"'' you can be sure that ''guiGetInputEnabled ()'' will return ''false''
* when ''guiGetInputMode ( )'' returns ''"no_binds"'' you can be sure that ''guiGetInputEnabled ()'' will return ''true''

==See Also==
{{GUI_functions}}